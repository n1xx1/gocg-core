// Code generated by "enumer -type=MessageType -json -transform=snake -output message_enumer.go -trimprefix MessageType"; DO NOT EDIT.

//
package ocgcore

import (
	"encoding/json"
	"fmt"
)

const _MessageTypeName = "waiting_responseretryhintwaitingstartwinupdate_dataupdate_cardrequest_deckselect_battle_cmdselect_idle_cmdselect_effect_ynselect_yes_noselect_optionselect_cardselect_chainselect_placeselect_positionselect_tributesort_chainselect_counterselect_sumselect_disfieldsort_cardselect_unselect_cardconfirm_deck_topconfirm_cardsshuffle_deckshuffle_handrefresh_deckswap_grave_deckshuffle_set_cardreverse_deckdeck_topshuffle_extranew_turnnew_phaseconfirm_extra_topmovepos_changesetswapfield_disabledsummoningsummonedsp_summoningsp_summonedflip_summoningflip_summonedchainingchainedchain_solvingchain_solvedchain_endchain_negatedchain_disabledcard_selectedrandom_selectedbecome_targetdrawdamagerecoverequiplp_updateunequipcard_targetcancel_targetpay_lp_costadd_counterremove_counterattackbattleattack_disableddamage_step_startdamage_step_endmissed_effectbe_chain_targetcreate_relationrelease_relationtoss_cointoss_dicerock_paper_scissorshand_resannounce_raceannounce_attributeannounce_cardannounce_numbercard_hinttag_swapreload_fieldai_nameshow_hintplayer_hintmatch_killcustom_messageremove_cards"

var _MessageTypeIndex = [...]uint16{0, 16, 21, 25, 32, 37, 40, 51, 62, 74, 91, 106, 122, 135, 148, 159, 171, 183, 198, 212, 222, 236, 246, 261, 270, 290, 306, 319, 331, 343, 355, 370, 386, 398, 406, 419, 427, 436, 453, 457, 467, 470, 474, 488, 497, 505, 517, 528, 542, 555, 563, 570, 583, 595, 604, 617, 631, 644, 659, 672, 676, 682, 689, 694, 703, 710, 721, 734, 745, 756, 770, 776, 782, 797, 814, 829, 842, 857, 872, 888, 897, 906, 925, 933, 946, 964, 977, 992, 1001, 1009, 1021, 1028, 1037, 1048, 1058, 1072, 1084}

func (i MessageType) String() string {
	if i >= MessageType(len(_MessageTypeIndex)-1) {
		return fmt.Sprintf("MessageType(%d)", i)
	}
	return _MessageTypeName[_MessageTypeIndex[i]:_MessageTypeIndex[i+1]]
}

var _MessageTypeValues = []MessageType{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95}

var _MessageTypeNameToValueMap = map[string]MessageType{
	_MessageTypeName[0:16]:      0,
	_MessageTypeName[16:21]:     1,
	_MessageTypeName[21:25]:     2,
	_MessageTypeName[25:32]:     3,
	_MessageTypeName[32:37]:     4,
	_MessageTypeName[37:40]:     5,
	_MessageTypeName[40:51]:     6,
	_MessageTypeName[51:62]:     7,
	_MessageTypeName[62:74]:     8,
	_MessageTypeName[74:91]:     9,
	_MessageTypeName[91:106]:    10,
	_MessageTypeName[106:122]:   11,
	_MessageTypeName[122:135]:   12,
	_MessageTypeName[135:148]:   13,
	_MessageTypeName[148:159]:   14,
	_MessageTypeName[159:171]:   15,
	_MessageTypeName[171:183]:   16,
	_MessageTypeName[183:198]:   17,
	_MessageTypeName[198:212]:   18,
	_MessageTypeName[212:222]:   19,
	_MessageTypeName[222:236]:   20,
	_MessageTypeName[236:246]:   21,
	_MessageTypeName[246:261]:   22,
	_MessageTypeName[261:270]:   23,
	_MessageTypeName[270:290]:   24,
	_MessageTypeName[290:306]:   25,
	_MessageTypeName[306:319]:   26,
	_MessageTypeName[319:331]:   27,
	_MessageTypeName[331:343]:   28,
	_MessageTypeName[343:355]:   29,
	_MessageTypeName[355:370]:   30,
	_MessageTypeName[370:386]:   31,
	_MessageTypeName[386:398]:   32,
	_MessageTypeName[398:406]:   33,
	_MessageTypeName[406:419]:   34,
	_MessageTypeName[419:427]:   35,
	_MessageTypeName[427:436]:   36,
	_MessageTypeName[436:453]:   37,
	_MessageTypeName[453:457]:   38,
	_MessageTypeName[457:467]:   39,
	_MessageTypeName[467:470]:   40,
	_MessageTypeName[470:474]:   41,
	_MessageTypeName[474:488]:   42,
	_MessageTypeName[488:497]:   43,
	_MessageTypeName[497:505]:   44,
	_MessageTypeName[505:517]:   45,
	_MessageTypeName[517:528]:   46,
	_MessageTypeName[528:542]:   47,
	_MessageTypeName[542:555]:   48,
	_MessageTypeName[555:563]:   49,
	_MessageTypeName[563:570]:   50,
	_MessageTypeName[570:583]:   51,
	_MessageTypeName[583:595]:   52,
	_MessageTypeName[595:604]:   53,
	_MessageTypeName[604:617]:   54,
	_MessageTypeName[617:631]:   55,
	_MessageTypeName[631:644]:   56,
	_MessageTypeName[644:659]:   57,
	_MessageTypeName[659:672]:   58,
	_MessageTypeName[672:676]:   59,
	_MessageTypeName[676:682]:   60,
	_MessageTypeName[682:689]:   61,
	_MessageTypeName[689:694]:   62,
	_MessageTypeName[694:703]:   63,
	_MessageTypeName[703:710]:   64,
	_MessageTypeName[710:721]:   65,
	_MessageTypeName[721:734]:   66,
	_MessageTypeName[734:745]:   67,
	_MessageTypeName[745:756]:   68,
	_MessageTypeName[756:770]:   69,
	_MessageTypeName[770:776]:   70,
	_MessageTypeName[776:782]:   71,
	_MessageTypeName[782:797]:   72,
	_MessageTypeName[797:814]:   73,
	_MessageTypeName[814:829]:   74,
	_MessageTypeName[829:842]:   75,
	_MessageTypeName[842:857]:   76,
	_MessageTypeName[857:872]:   77,
	_MessageTypeName[872:888]:   78,
	_MessageTypeName[888:897]:   79,
	_MessageTypeName[897:906]:   80,
	_MessageTypeName[906:925]:   81,
	_MessageTypeName[925:933]:   82,
	_MessageTypeName[933:946]:   83,
	_MessageTypeName[946:964]:   84,
	_MessageTypeName[964:977]:   85,
	_MessageTypeName[977:992]:   86,
	_MessageTypeName[992:1001]:  87,
	_MessageTypeName[1001:1009]: 88,
	_MessageTypeName[1009:1021]: 89,
	_MessageTypeName[1021:1028]: 90,
	_MessageTypeName[1028:1037]: 91,
	_MessageTypeName[1037:1048]: 92,
	_MessageTypeName[1048:1058]: 93,
	_MessageTypeName[1058:1072]: 94,
	_MessageTypeName[1072:1084]: 95,
}

// MessageTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func MessageTypeString(s string) (MessageType, error) {
	if val, ok := _MessageTypeNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to MessageType values", s)
}

// MessageTypeValues returns all values of the enum
func MessageTypeValues() []MessageType {
	return _MessageTypeValues
}

// IsAMessageType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i MessageType) IsAMessageType() bool {
	for _, v := range _MessageTypeValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for MessageType
func (i MessageType) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for MessageType
func (i *MessageType) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("MessageType should be a string, got %s", data)
	}

	var err error
	*i, err = MessageTypeString(s)
	return err
}
